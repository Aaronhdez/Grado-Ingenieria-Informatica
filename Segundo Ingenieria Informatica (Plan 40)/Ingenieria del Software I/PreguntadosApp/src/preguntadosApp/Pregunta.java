//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Pregunta.java
//  @ Date : 01/05/2020
//  @ Author : 
//
//

package preguntadosApp;
import java.util.Set;
import java.util.TreeSet;

public class Pregunta implements Comparable<Pregunta> {
	private int codPreg;
        private ImagenCuestion img;
	private String enunciado;
	private Respuesta correcta;
	private Respuesta elegida;
        private Set<Respuesta> respuestas;
        private String tipo;
        
        /**
         * Enumeración privada
         */
        private enum TipoPregunta{ 
            NONE("None"), HISTORIA("Historia"), ARTE("Arte"), CIENCIA("Ciencia"), 
            GEOGRAFIA("Geografia"), DEPORTES("Deportes"), ENTRETENIMIENTO("Entretenimiento");
            private String nombre;
            private TipoPregunta(String nombre) {
                this.nombre = nombre;
            }

            @Override
            public String toString(){
                return nombre;
            }
        }
        
        /**
         * Constructor por defecto;
         */
        public Pregunta(){
            this.codPreg = this.setId();
            setImg(null);
            this.respuestas = new TreeSet<Respuesta>();
            this.elegida = null;
            this.correcta = null;
            this.enunciado = "";
            TipoPregunta[] tipos = TipoPregunta.values();
            this.tipo = tipos[0].name();
        }
        
        /**
         * Constructor con parámetros;
         */
        public Pregunta(String txt, int type){
            this.codPreg = this.setId();
            setImg(null);
            this.respuestas = new TreeSet<Respuesta>();
            this.elegida = null;
            this.correcta = null;
            this.enunciado = txt;
            TipoPregunta[] tipos = TipoPregunta.values();
            this.tipo = tipos[type].name();
        }
        
        
        /**
         * Método para generar autmáticamente el id de la respuesta.
         * 
         * @return el id generado automáticamente para  
         */
        private int setId(){
            return this.hashCode() * 13;
        }

        /**
         * Método para generar autmáticamente el id de la respuesta.
         * 
         * @return el id generado automáticamente para  
         */
        public int getId(){
            return this.codPreg;
        }
        /**
         * Metodo que retona el enunciado de la pregunta
         * @return 
         */
	public String getEnunciado() {
            return this.enunciado;
	}
        
        /**
         * Retorna 
         * @return 
         */
	public String[] getRespuestas() {
            String[] res = new String[this.respuestas.size()];
            int i=0;
            for(Respuesta r: this.respuestas){
                res[i] = r.getTexto();
                i++;
            }
            return res;
	}
        
        /**
         * 
         * @return 
         */
	public Respuesta getCorrecta() {
            return this.correcta;
	}
	
        /**
         * 
         * @return 
         */
	public String getTipo() {
            return this.tipo;
	}
	
        /**
         * 
         * @return 
         */
	public Respuesta getElegida() {
            return this.elegida;
	}
	
        /**
         * 
         * @return 
         */
	public ImagenCuestion getImg() {
            return this.img;
	}
	
        /**
         * 
         * @param String 
         */
	public void setEnunciado(String enun) {
            this.enunciado = enun;
	}
	
        /**
         * 
         * @param sample
         * @return 
         */
	public void setImg(ImagenCuestion sample) {
            this.img = sample;
	}
        
        /**
         * 
         * @param res 
         */
	public void setElegida(Respuesta res) {
            this.elegida = res;
	}
	
        /**
         * 
         * @param res 
         */
	public void setCorrecta(Respuesta res) {
            this.correcta = res;
	}
	
        /**
         * 
         * @param tp 
         */
	public void setTipo(int tp) {
            TipoPregunta[] tipos = TipoPregunta.values();
            this.tipo = tipos[tp].name();
	}
	
        /**
         * 
         * @param nuevaRespuesta 
         */
	public void addRespuesta(Respuesta nuevaRespuesta) {
            if(this.respuestas.size() == 4){
                System.out.println("No se pudo añadir la respuesta "+nuevaRespuesta.getId()+": Número máximo excedido.");
                return;
            }
            if(this.respuestas.add(nuevaRespuesta)){
                System.out.println("Respueta "+nuevaRespuesta.getId()+" añadida correctamente");
            } else {
                System.out.println("No se pudo añadir la respuesta "+nuevaRespuesta.getId()+": Ya existe");
            }
            
            
	}
	
        /**
         * 
         * @param seleccion
         * @return 
         */
	public boolean verificarCorrecta(Respuesta seleccion) {
            if(this.correcta.compareTo(seleccion)==0){
                return true;
            } else {
                return false;
            }
	}

	public void eleccion() {
	
	}
        
        /**
         * 
         * @param j
         * @return 
         */
        @Override
        public int compareTo(Pregunta p){
            if(this.codPreg == p.getId()){
                return 0;
            } else {
                return ((Integer)this.codPreg).compareTo((Integer)p.getId());
            }
        }
}
