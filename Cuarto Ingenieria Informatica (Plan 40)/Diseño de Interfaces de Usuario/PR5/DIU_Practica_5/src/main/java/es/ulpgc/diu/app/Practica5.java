/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.ulpgc.diu.app;

import javax.swing.JCheckBox;

/**
 *
 * @author santa
 */
public class Practica5 extends javax.swing.JFrame {

    private static boolean RED_STATUS;
    private static boolean BLUE_STATUS;
    private static boolean GREEN_STATUS;
    /**
     * Creates new form Practica5
     */
    public Practica5() {
        initComponents();
        resizeToImageSize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cornersButtonGroup = new javax.swing.ButtonGroup();
        ColoursPanel = new javax.swing.JPanel();
        allSelectedCheckBox = new javax.swing.JCheckBox();
        redCheckBox = new javax.swing.JCheckBox();
        greenCheckBox = new javax.swing.JCheckBox();
        blueCheckBox = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        rightUpperCorner = new javax.swing.JRadioButton();
        rightLowerCorner = new javax.swing.JRadioButton();
        leftLowerCorner = new javax.swing.JRadioButton();
        leftUpperCorner = new javax.swing.JRadioButton();
        canvas1 = new es.ulpgc.diu.app.Canvas();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1244, 840));
        setMinimumSize(new java.awt.Dimension(1244, 840));
        setPreferredSize(new java.awt.Dimension(1244, 840));
        setResizable(false);

        ColoursPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Colores RGB"));

        allSelectedCheckBox.setSelected(true);
        allSelectedCheckBox.setText("Todos");
        allSelectedCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allSelectedCheckBoxActionPerformed(evt);
            }
        });

        redCheckBox.setSelected(true);
        redCheckBox.setText("Rojo");
        redCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redCheckBoxActionPerformed(evt);
            }
        });

        greenCheckBox.setSelected(true);
        greenCheckBox.setText("Verde");
        greenCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenCheckBoxActionPerformed(evt);
            }
        });

        blueCheckBox.setSelected(true);
        blueCheckBox.setText("Azul");
        blueCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ColoursPanelLayout = new javax.swing.GroupLayout(ColoursPanel);
        ColoursPanel.setLayout(ColoursPanelLayout);
        ColoursPanelLayout.setHorizontalGroup(
            ColoursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ColoursPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ColoursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allSelectedCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(redCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(greenCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(blueCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ColoursPanelLayout.setVerticalGroup(
            ColoursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ColoursPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allSelectedCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(redCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(greenCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(blueCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        allSelectedCheckBox.getAccessibleContext().setAccessibleDescription("Todos");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Logo"));

        cornersButtonGroup.add(rightUpperCorner);
        rightUpperCorner.setSelected(true);
        rightUpperCorner.setText("Arriba Derecha");
        rightUpperCorner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightUpperCornerActionPerformed(evt);
            }
        });

        cornersButtonGroup.add(rightLowerCorner);
        rightLowerCorner.setText("Abajo Derecha");
        rightLowerCorner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightLowerCornerActionPerformed(evt);
            }
        });

        cornersButtonGroup.add(leftLowerCorner);
        leftLowerCorner.setText("Abajo Izquierda");
        leftLowerCorner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftLowerCornerActionPerformed(evt);
            }
        });

        cornersButtonGroup.add(leftUpperCorner);
        leftUpperCorner.setText("Arriba Izquierda");
        leftUpperCorner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftUpperCornerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rightUpperCorner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rightLowerCorner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(leftLowerCorner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(leftUpperCorner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rightUpperCorner)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightLowerCorner)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftLowerCorner)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftUpperCorner)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        canvas1.setMaximumSize(new java.awt.Dimension(1024, 768));
        canvas1.setMinimumSize(new java.awt.Dimension(1024, 768));
        canvas1.setPreferredSize(new java.awt.Dimension(1024, 768));

        javax.swing.GroupLayout canvas1Layout = new javax.swing.GroupLayout(canvas1);
        canvas1.setLayout(canvas1Layout);
        canvas1Layout.setHorizontalGroup(
            canvas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        canvas1Layout.setVerticalGroup(
            canvas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 768, Short.MAX_VALUE)
        );

        jLabel1.setText("Aarón Hernández Álvarez y Santiago Abraham Izquierdo Cubas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1184, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ColoursPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(canvas1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ColoursPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void allSelectedCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allSelectedCheckBoxActionPerformed
        allSelectedCheckBox.setSelected(true);
        redCheckBox.setSelected(true);
        greenCheckBox.setSelected(true);
        blueCheckBox.setSelected(true);
        this.canvas1.setColor(redCheckBox.isSelected(), greenCheckBox.isSelected(), blueCheckBox.isSelected());
    }//GEN-LAST:event_allSelectedCheckBoxActionPerformed

    private void redCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redCheckBoxActionPerformed
        this.updateCheckBoxesStatus();
        triggerThisCheckBoxAction(redCheckBox, GREEN_STATUS, BLUE_STATUS);
    }//GEN-LAST:event_redCheckBoxActionPerformed

    private void greenCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenCheckBoxActionPerformed
        this.updateCheckBoxesStatus();
        triggerThisCheckBoxAction(greenCheckBox, RED_STATUS, BLUE_STATUS);
    }//GEN-LAST:event_greenCheckBoxActionPerformed

    private void blueCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueCheckBoxActionPerformed
        this.updateCheckBoxesStatus();
        triggerThisCheckBoxAction(blueCheckBox, GREEN_STATUS, RED_STATUS);
    }//GEN-LAST:event_blueCheckBoxActionPerformed

        private void triggerThisCheckBoxAction(JCheckBox targetCheckbox, boolean status1, boolean status2) {
        if(!thisIsTheOnlySelected(status1, status2)){
            filterByColor();
        } else {
            targetCheckbox.setSelected(true);
        }
        if (allAreSelected()) {
            allSelectedCheckBox.setSelected(true);
        }
    }
    
    private void rightUpperCornerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightUpperCornerActionPerformed
        int currentWidth = this.canvas1.getCurrentImageDimensions().width;
        int logoWidth = this.canvas1.getCurrentLogoDimensions().width;
        int newX = currentWidth-logoWidth;
        this.canvas1.redrawLogo(newX, 0);
    }//GEN-LAST:event_rightUpperCornerActionPerformed

    private void rightLowerCornerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightLowerCornerActionPerformed
        int currentWidth = this.canvas1.getCurrentImageDimensions().width;
        int logoWidth = this.canvas1.getCurrentLogoDimensions().width;
        int currentHeight = this.canvas1.getCurrentImageDimensions().height;
        int logoHeight = this.canvas1.getCurrentLogoDimensions().height;
        int newX = currentWidth-logoWidth;
        int newY = currentHeight-logoHeight;
        this.canvas1.redrawLogo(newX, newY);
    }//GEN-LAST:event_rightLowerCornerActionPerformed

    private void leftLowerCornerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftLowerCornerActionPerformed
        int currentHeight = this.canvas1.getCurrentImageDimensions().height;
        int logoHeight = this.canvas1.getCurrentLogoDimensions().height;
        int newY = currentHeight-logoHeight;
        this.canvas1.redrawLogo(0, newY);
    }//GEN-LAST:event_leftLowerCornerActionPerformed

    private void leftUpperCornerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftUpperCornerActionPerformed
        this.canvas1.redrawLogo(0, 0);
    }//GEN-LAST:event_leftUpperCornerActionPerformed

    private boolean thisIsTheOnlySelected(boolean target1, boolean target2) {
        return(!target1 && !target2);
    }
    
    private boolean allAreSelected(){
        return(RED_STATUS && BLUE_STATUS && GREEN_STATUS);
    }
    
    private void filterByColor() {
        allSelectedCheckBox.setSelected(false);
        this.canvas1.setColor(redCheckBox.isSelected(), greenCheckBox.isSelected(), blueCheckBox.isSelected());
    }

    private void resizeToImageSize() {
        int adjustedWidth = this.canvas1.getCurrentImageDimensions().width + 200;
        int adjustedHeight = this.canvas1.getCurrentImageDimensions().height + 40;
        if(adjustedWidth >= this.getMinimumSize().width && adjustedHeight >= this.getMinimumSize().height )
        this.setSize(adjustedWidth, adjustedHeight);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica5().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ColoursPanel;
    private javax.swing.JCheckBox allSelectedCheckBox;
    private javax.swing.JCheckBox blueCheckBox;
    private es.ulpgc.diu.app.Canvas canvas1;
    private javax.swing.ButtonGroup cornersButtonGroup;
    private javax.swing.JCheckBox greenCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton leftLowerCorner;
    private javax.swing.JRadioButton leftUpperCorner;
    private javax.swing.JCheckBox redCheckBox;
    private javax.swing.JRadioButton rightLowerCorner;
    private javax.swing.JRadioButton rightUpperCorner;
    // End of variables declaration//GEN-END:variables

    private void updateCheckBoxesStatus() {
        Practica5.RED_STATUS = this.redCheckBox.isSelected();
        Practica5.BLUE_STATUS = this.blueCheckBox.isSelected();
        Practica5.GREEN_STATUS = this.greenCheckBox.isSelected();
    }

}
